{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/TICS/Documents/TICS_2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/TICS/Documents/TICS_2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport swal from \"sweetalert\";\nimport { fetchSinToken } from \"../helpers/fetch\";\nimport { types } from '../types/types';\nexport var startLogin = function startLogin(id, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var resp, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchSinToken('api/auth', {\n                id: id,\n                password: password\n              }, 'POST');\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return resp.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (body.ok) {\n                localStorage.setItem('token', body.token);\n                localStorage.setItem('token-comienzo', new Date().getTime());\n                dispatch(login({\n                  id: body.id\n                }));\n              } else {\n                swal(\"Error\", body.msg, \"error\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar login = function login(id) {\n  return {\n    type: types.authLogin,\n    payload: id\n  };\n};\n\nexport var startLogout = function startLogout() {\n  return function (dispatch) {\n    localStorage.clear();\n    dispatch(logout());\n  };\n};\n\nvar logout = function logout() {\n  return {\n    type: types.authLogout\n  };\n};","map":{"version":3,"sources":["C:/Users/TICS/Documents/TICS_2/frontend/src/actions/auth.js"],"names":["swal","fetchSinToken","types","startLogin","id","password","dispatch","resp","json","body","ok","localStorage","setItem","token","Date","getTime","login","msg","type","authLogin","payload","startLogout","clear","logout","authLogout"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,QAAL,EAAkB;AACxC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBL,aAAa,CAAC,UAAD,EAAa;AAAEG,gBAAAA,EAAE,EAAFA,EAAF;AAAMC,gBAAAA,QAAQ,EAARA;AAAN,eAAb,EAA+B,MAA/B,CAD7B;;AAAA;AACGE,cAAAA,IADH;AAAA;AAAA,qBAEgBA,IAAI,CAACC,IAAL,EAFhB;;AAAA;AAEGC,cAAAA,IAFH;;AAGH,kBAAIA,IAAI,CAACC,EAAT,EAAa;AACTC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAF,gBAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,IAAIE,IAAJ,GAAWC,OAAX,EAAvC;AACAT,gBAAAA,QAAQ,CAACU,KAAK,CAAC;AACXZ,kBAAAA,EAAE,EAAEK,IAAI,CAACL;AADE,iBAAD,CAAN,CAAR;AAGH,eAND,MAOK;AACDJ,gBAAAA,IAAI,CAAC,OAAD,EAAUS,IAAI,CAACQ,GAAf,EAAoB,OAApB,CAAJ;AACH;;AAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcH,CAfM;;AAiBP,IAAMD,KAAK,GAAG,SAARA,KAAQ,CAACZ,EAAD;AAAA,SAAS;AACnBc,IAAAA,IAAI,EAAEhB,KAAK,CAACiB,SADO;AAEnBC,IAAAA,OAAO,EAAEhB;AAFU,GAAT;AAAA,CAAd;;AAKA,OAAO,IAAMiB,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO,UAACf,QAAD,EAAc;AACjBK,IAAAA,YAAY,CAACW,KAAb;AACAhB,IAAAA,QAAQ,CAACiB,MAAM,EAAP,CAAR;AACH,GAHD;AAIH,CALM;;AAOP,IAAMA,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AAACL,IAAAA,IAAI,EAAEhB,KAAK,CAACsB;AAAb,GAAP;AAAA,CAAf","sourcesContent":["import swal from \"sweetalert\";\r\nimport { fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from '../types/types';\r\n\r\nexport const startLogin = (id, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('api/auth', { id, password }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-comienzo', new Date().getTime());\r\n            dispatch(login({\r\n                id: body.id\r\n            }));\r\n        }\r\n        else {\r\n            swal(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nconst login = (id) => ({\r\n    type: types.authLogin,\r\n    payload: id\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({type: types.authLogout});"]},"metadata":{},"sourceType":"module"}