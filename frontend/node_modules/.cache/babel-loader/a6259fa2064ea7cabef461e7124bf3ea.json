{"ast":null,"code":"import _regeneratorRuntime from \"D:/Archivos de programa/Universidad/Ramos/2020-2/Proyecto en Tics 2/Proyecto/codigo-tics2/TICS_2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Archivos de programa/Universidad/Ramos/2020-2/Proyecto en Tics 2/Proyecto/codigo-tics2/TICS_2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport swal from \"sweetalert\";\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\nimport { types } from '../types/types';\nexport var startLogin = function startLogin(id, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var resp, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchSinToken('api/auth', {\n                id: id,\n                password: password\n              }, 'POST');\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return resp.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (body.ok) {\n                localStorage.setItem('token', body.token);\n                localStorage.setItem('token-comienzo', new Date().getTime());\n                dispatch(login({\n                  id: body.id\n                }));\n              } else {\n                swal(\"Error\", body.msg, \"error\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var startChecking = function startChecking() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var resp, body;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetchConToken('api/auth/renew');\n\n            case 2:\n              resp = _context2.sent;\n              _context2.next = 5;\n              return resp.json();\n\n            case 5:\n              body = _context2.sent;\n\n              if (body.ok) {\n                localStorage.setItem('token', body.token);\n                localStorage.setItem('token-comienzo', new Date().getTime());\n                dispatch(login({\n                  id: body.id\n                }));\n              } else {\n                dispatch(checkingFinish());\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nvar checkingFinish = function checkingFinish() {\n  return {\n    type: types.authCheckingFinish\n  };\n};\n\nvar login = function login(id) {\n  return {\n    type: types.authLogin,\n    payload: id\n  };\n};\n\nexport var startLogout = function startLogout() {\n  return function (dispatch) {\n    localStorage.clear();\n  };\n};","map":{"version":3,"sources":["D:/Archivos de programa/Universidad/Ramos/2020-2/Proyecto en Tics 2/Proyecto/codigo-tics2/TICS_2/frontend/src/actions/auth.js"],"names":["swal","fetchSinToken","fetchConToken","types","startLogin","id","password","dispatch","resp","json","body","ok","localStorage","setItem","token","Date","getTime","login","msg","startChecking","checkingFinish","type","authCheckingFinish","authLogin","payload","startLogout","clear"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,QAAL,EAAkB;AACxC;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBN,aAAa,CAAC,UAAD,EAAa;AAAEI,gBAAAA,EAAE,EAAFA,EAAF;AAAMC,gBAAAA,QAAQ,EAARA;AAAN,eAAb,EAA+B,MAA/B,CAD7B;;AAAA;AACGE,cAAAA,IADH;AAAA;AAAA,qBAEgBA,IAAI,CAACC,IAAL,EAFhB;;AAAA;AAEGC,cAAAA,IAFH;;AAGH,kBAAIA,IAAI,CAACC,EAAT,EAAa;AACTC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAF,gBAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,IAAIE,IAAJ,GAAWC,OAAX,EAAvC;AACAT,gBAAAA,QAAQ,CAACU,KAAK,CAAC;AACXZ,kBAAAA,EAAE,EAAEK,IAAI,CAACL;AADE,iBAAD,CAAN,CAAR;AAGH,eAND,MAOK;AACDL,gBAAAA,IAAI,CAAC,OAAD,EAAUU,IAAI,CAACQ,GAAf,EAAoB,OAApB,CAAJ;AACH;;AAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcH,CAfM;AAiBP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B;AAAA,yEAAO,kBAAOZ,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBL,aAAa,CAAC,gBAAD,CAD7B;;AAAA;AACGM,cAAAA,IADH;AAAA;AAAA,qBAEgBA,IAAI,CAACC,IAAL,EAFhB;;AAAA;AAEGC,cAAAA,IAFH;;AAGH,kBAAIA,IAAI,CAACC,EAAT,EAAa;AACTC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAF,gBAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,IAAIE,IAAJ,GAAWC,OAAX,EAAvC;AACAT,gBAAAA,QAAQ,CAACU,KAAK,CAAC;AACXZ,kBAAAA,EAAE,EAAEK,IAAI,CAACL;AADE,iBAAD,CAAN,CAAR;AAGH,eAND,MAOK;AACDE,gBAAAA,QAAQ,CAACa,cAAc,EAAf,CAAR;AACH;;AAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcH,CAfM;;AAiBP,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAACC,IAAAA,IAAI,EAAElB,KAAK,CAACmB;AAAb,GAAP;AAAA,CAAvB;;AAEA,IAAML,KAAK,GAAG,SAARA,KAAQ,CAACZ,EAAD;AAAA,SAAS;AACnBgB,IAAAA,IAAI,EAAElB,KAAK,CAACoB,SADO;AAEnBC,IAAAA,OAAO,EAAEnB;AAFU,GAAT;AAAA,CAAd;;AAKA,OAAO,IAAMoB,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO,UAAClB,QAAD,EAAc;AACjBK,IAAAA,YAAY,CAACc,KAAb;AACH,GAFD;AAGH,CAJM","sourcesContent":["import swal from \"sweetalert\";\r\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from '../types/types';\r\n\r\nexport const startLogin = (id, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('api/auth', { id, password }, 'POST');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-comienzo', new Date().getTime());\r\n            dispatch(login({\r\n                id: body.id\r\n            }));\r\n        }\r\n        else {\r\n            swal(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('api/auth/renew');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-comienzo', new Date().getTime());\r\n            dispatch(login({\r\n                id: body.id\r\n            }));\r\n        }\r\n        else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish});\r\n\r\nconst login = (id) => ({\r\n    type: types.authLogin,\r\n    payload: id\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}